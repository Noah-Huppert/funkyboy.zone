---
# Source: teleport-cluster/templates/psp.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: RELEASE-NAME
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName: 'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
  - ALL
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
    # Forbid adding the root group.
    - min: 1
      max: 65535
  runAsUser:
    rule: MustRunAsNonRoot
  fsGroup:
    rule: MustRunAs
    ranges:
    # Forbid adding the root group.
    - min: 1
      max: 65535
  readOnlyRootFilesystem: true
  volumes:
  - '*'
  hostNetwork: false
  hostIPC: false
  hostPID: false
---
# Source: teleport-cluster/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: RELEASE-NAME
  namespace: default
---
# Source: teleport-cluster/templates/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: RELEASE-NAME
  namespace: default
data:
  teleport.yaml: |
    teleport:
      log:
        severity: INFO
        output: stderr
        format:
          output: text
          extra_fields: ["timestamp","level","component","caller"]
    auth_service:
      enabled: true
      cluster_name: funkyboy.zone
      authentication:
        type: local
        second_factor: otp
    kubernetes_service:
      enabled: true
      listen_addr: 0.0.0.0:3027
      kube_cluster_name: funkyboy.zone
    proxy_service:
      public_addr: 'funkyboy.zone:443'
      kube_listen_addr: 0.0.0.0:3026
      mysql_listen_addr: 0.0.0.0:3036
      enabled: true
    ssh_service:
      enabled: false
---
# Source: teleport-cluster/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: RELEASE-NAME
  namespace: default
  labels:
    app: RELEASE-NAME
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Source: teleport-cluster/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: RELEASE-NAME
rules:
- apiGroups:
  - ""
  resources:
  - users
  - groups
  - serviceaccounts
  verbs:
  - impersonate
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - "authorization.k8s.io"
  resources:
  - selfsubjectaccessreviews
  verbs:
  - create
---
# Source: teleport-cluster/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: RELEASE-NAME
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: RELEASE-NAME
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME
  namespace: default
---
# Source: teleport-cluster/templates/psp.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: RELEASE-NAME-psp
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
  resourceNames:
  - RELEASE-NAME
---
# Source: teleport-cluster/templates/psp.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: RELEASE-NAME-psp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: RELEASE-NAME-psp
subjects:
- kind: ServiceAccount
  name: RELEASE-NAME
---
# Source: teleport-cluster/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: RELEASE-NAME
  namespace: default
  labels:
    app: RELEASE-NAME
spec:
  type: LoadBalancer
  ports:
  - name: https
    port: 443
    targetPort: 3080
    protocol: TCP
  - name: sshproxy
    port: 3023
    targetPort: 3023
    protocol: TCP
  - name: k8s
    port: 3026
    targetPort: 3026
    protocol: TCP
  - name: sshtun
    port: 3024
    targetPort: 3024
    protocol: TCP
  - name: mysql
    port: 3036
    targetPort: 3036
    protocol: TCP
  selector:
    app: RELEASE-NAME
---
# Source: teleport-cluster/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: RELEASE-NAME
  namespace: default
  labels:
    app: RELEASE-NAME
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: RELEASE-NAME
  template:
    metadata:
      annotations:
        # ConfigMap checksum, to recreate the pod on config changes.
        checksum/config: 9902b3b470da86f7f834ce40b53ef25c07f72728a39bd71a65afb70617d99e3c
      labels:
        app: RELEASE-NAME
    spec:
      containers:
      - name: "teleport"
        image: "quay.io/gravitational/teleport:9.3.4"
        imagePullPolicy: IfNotPresent
        args:
        - "--diag-addr=0.0.0.0:3000"
        ports:
        - name: diag
          containerPort: 3000
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: diag
          initialDelaySeconds: 5 # wait 5s for agent to start
          periodSeconds: 5 # poll health every 5s
          failureThreshold: 6 # consider agent unhealthy after 30s (6 * 5s)
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /readyz
            port: diag
          initialDelaySeconds: 5 # wait 5s for agent to register
          periodSeconds: 5 # poll health every 5s
          failureThreshold: 12 # consider agent unhealthy after 60s (12 * 5s)
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /etc/teleport
          name: "config"
          readOnly: true
        - mountPath: /var/lib/teleport
          name: "data"
      volumes:
      - name: gcp-credentials
        secret:
          secretName: teleport-gcp-credentials
      - name: "config"
        configMap:
          name: RELEASE-NAME
      - name: "data"
        persistentVolumeClaim:
          claimName: RELEASE-NAME
      serviceAccountName: RELEASE-NAME
